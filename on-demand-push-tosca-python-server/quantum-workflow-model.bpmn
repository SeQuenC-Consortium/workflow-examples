<?xml version="1.0" encoding="UTF-8"?>
<bpmn2:definitions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bpmn2="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:opentosca="https://github.com/UST-QuAntiL/OpenTOSCA" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" id="sample-diagram" targetNamespace="http://bpmn.io/schema/bpmn" xsi:schemaLocation="http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd">
  <bpmn2:process id="on" isExecutable="true" camunda:historyTimeToLive="1">
    <bpmn2:startEvent id="StartEvent_1">
      <bpmn2:outgoing>Flow_1il9il5</bpmn2:outgoing>
    </bpmn2:startEvent>
    <bpmn2:sequenceFlow id="Flow_1up6jtj" sourceRef="Activity_1hpmqte" targetRef="Activity_1t2h9q0" />
    <bpmn2:serviceTask id="Activity_1hpmqte" name="OnDemand" opentosca:deploymentModelUrl="{{ wineryEndpoint }}/servicetemplates/http%253A%252F%252Fquantil.org%252Fquantme%252Fpush/abc_w1-wip1/?csar" opentosca:connectorUrl="/pet" yaml="openapi: 3.0.3&#10;&#10;&#10;servers:&#10;&#10;  - url: https://petstore3.swagger.io/api/v3&#10;&#10;tags:&#10;&#10;  - name: pet&#10;&#10;    description: Everything about your Pets&#10;&#10;    externalDocs:&#10;&#10;      description: Find out more&#10;&#10;      url: http://swagger.io&#10;&#10;  - name: store&#10;&#10;    description: Access to Petstore orders&#10;&#10;    externalDocs:&#10;&#10;      description: Find out more about our store&#10;&#10;      url: http://swagger.io&#10;&#10;  - name: user&#10;&#10;    description: Operations about user&#10;&#10;paths:&#10;&#10;  /pet:&#10;&#10;    put:&#10;&#10;      tags:&#10;&#10;        - pet&#10;&#10;      operationId: updatePet&#10;&#10;      requestBody:&#10;&#10;        description: Update an existent pet in the store&#10;&#10;        content:&#10;&#10;          application/json:&#10;&#10;            schema:&#10;&#10;              required:&#10;&#10;                - name&#10;&#10;                - photoUrls&#10;&#10;              type: object&#10;&#10;              properties:&#10;&#10;                id:&#10;&#10;                  type: integer&#10;&#10;                  format: int64&#10;&#10;                  example: 10&#10;&#10;                name:&#10;&#10;                  type: string&#10;&#10;                  example: doggie&#10;&#10;                photoUrls:&#10;&#10;                  type: array&#10;&#10;                  xml:&#10;&#10;                    wrapped: true&#10;&#10;                  items:&#10;&#10;                    type: string&#10;&#10;                    xml:&#10;&#10;                      name: photoUrl&#10;&#10;                status:&#10;&#10;                  type: string&#10;&#10;                  description: pet status in the store&#10;&#10;                  enum:&#10;&#10;                    - available&#10;&#10;                    - pending&#10;&#10;                    - sold&#10;&#10;        required: true&#10;&#10;      responses:&#10;&#10;        &#39;200&#39;:&#10;&#10;          description: Successful operation&#10;&#10;          content:&#10;&#10;            application/json:&#10;&#10;              schema:&#10;&#10;                required:&#10;&#10;                  - name&#10;&#10;                  - photoUrls&#10;&#10;                type: object&#10;&#10;                properties:&#10;&#10;                  id:&#10;&#10;                    type: integer&#10;&#10;                    format: int64&#10;&#10;                    example: 10&#10;&#10;                  name:&#10;&#10;                    type: string&#10;&#10;                    example: doggie&#10;&#10;                  photoUrls:&#10;&#10;                    type: array&#10;&#10;                    xml:&#10;&#10;                      wrapped: true&#10;&#10;                    items:&#10;&#10;                      type: string&#10;&#10;                      xml:&#10;&#10;                        name: photoUrl&#10;&#10;                  status:&#10;&#10;                    type: string&#10;&#10;                    description: pet status in the store&#10;&#10;                    enum:&#10;&#10;                      - available&#10;&#10;                      - pending&#10;&#10;                      - sold&#10;&#10;&#10;">
      <bpmn2:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="url" />
            <camunda:inputParameter name="payload" />
            <camunda:outputParameter name="onDemandOutput">
              <camunda:script scriptFormat="Groovy">def resp = connector.getVariable("response");
resp = new groovy.json.JsonSlurper().parseText(resp);
def onDemandOutput = resp.get("host");
println(onDemandOutput);
return onDemandOutput;</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
        <camunda:inputOutput />
      </bpmn2:extensionElements>
      <bpmn2:incoming>Flow_1il9il5</bpmn2:incoming>
      <bpmn2:outgoing>Flow_1up6jtj</bpmn2:outgoing>
    </bpmn2:serviceTask>
    <bpmn2:serviceTask id="Activity_1t2h9q0" name="Wait" camunda:type="external" camunda:topic="abdhd">
      <bpmn2:incoming>Flow_1up6jtj</bpmn2:incoming>
      <bpmn2:outgoing>Flow_0i6nbtm</bpmn2:outgoing>
    </bpmn2:serviceTask>
    <bpmn2:sequenceFlow id="Flow_1il9il5" sourceRef="StartEvent_1" targetRef="Activity_1hpmqte" />
    <bpmn2:endEvent id="Event_106l5nm">
      <bpmn2:incoming>Flow_0i6nbtm</bpmn2:incoming>
    </bpmn2:endEvent>
    <bpmn2:sequenceFlow id="Flow_0i6nbtm" sourceRef="Activity_1t2h9q0" targetRef="Event_106l5nm" />
  </bpmn2:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="on">
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="402" y="232" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0bqkrac_di" bpmnElement="Activity_1hpmqte">
        <dc:Bounds x="640" y="190" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1o65rjm_di" bpmnElement="Activity_1t2h9q0">
        <dc:Bounds x="850" y="190" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_106l5nm_di" bpmnElement="Event_106l5nm">
        <dc:Bounds x="1022" y="212" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_1up6jtj_di" bpmnElement="Flow_1up6jtj">
        <di:waypoint x="740" y="230" />
        <di:waypoint x="850" y="230" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1il9il5_di" bpmnElement="Flow_1il9il5">
        <di:waypoint x="420" y="232" />
        <di:waypoint x="420" y="130" />
        <di:waypoint x="690" y="130" />
        <di:waypoint x="690" y="190" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0i6nbtm_di" bpmnElement="Flow_0i6nbtm">
        <di:waypoint x="950" y="230" />
        <di:waypoint x="1022" y="230" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn2:definitions>
